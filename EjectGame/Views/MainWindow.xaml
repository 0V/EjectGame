<Window x:Class="EjectGame.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:EjectGame.Views"
        xmlns:vm="clr-namespace:EjectGame.ViewModels"
        Title="MainWindow" Height="350" Width="525">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->


        <l:InteractionMessageTrigger Messenger="{Binding Messenger,Mode=OneWay}" MessageKey="GameOver">
            <l:InformationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="Close" 
			Messenger="{Binding Messenger, Mode=OneWay}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <Style x:Key="EjectMenuTheme"
                   TargetType="{x:Type MenuItem}">
            <Setter Property="Command"
                        Value="{Binding EjectCommand}" />
            <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
        </Style>


        <ControlTemplate x:Key="Default" TargetType='{x:Type ListViewItem}'  >
            <Grid Background="Transparent" Height="40" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                </Grid.RowDefinitions>
                <GridViewRowPresenter Content="{TemplateBinding Content}" 
                                      Columns="{TemplateBinding GridView.ColumnCollection}"/>
                    <Button Background="Transparent"  Grid.Row="1"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="MohyoButtonTemplate" TargetType="{x:Type Button}">
            <Grid>
                <Ellipse x:Name="BlurEllipse" HorizontalAlignment="Stretch" Margin="10" VerticalAlignment="Stretch" Fill="{TemplateBinding Background}">
                    <Ellipse.Effect>
                        <BlurEffect Radius="20"/>
                    </Ellipse.Effect>
                </Ellipse>
                <Ellipse HorizontalAlignment="Stretch" Margin="10" VerticalAlignment="Stretch" Fill="{TemplateBinding Background}">
                </Ellipse>

                <Ellipse x:Name="MaskEllipse" HorizontalAlignment="Stretch" Margin="10" VerticalAlignment="Stretch" Fill="#66FFFFFF" Opacity="0.8">
                </Ellipse>

                <Viewbox>
                    <ContentPresenter Margin="20" Name="buttonContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Viewbox>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="MaskEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.3"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="MaskEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.Effect).(BlurEffect.Radius)" Storyboard.TargetName="BlurEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="60"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="MaskEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.Effect).(BlurEffect.Radius)" Storyboard.TargetName="BlurEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="MaskEllipse">
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="Gray"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsFocused" Value="True"/>
                <Trigger Property="IsDefaulted" Value="True"/>
                <Trigger Property="IsMouseOver" Value="True"/>
                <Trigger Property="IsPressed" Value="True"/>
                <Trigger Property="IsEnabled" Value="False"/>
            </ControlTemplate.Triggers>
            
        </ControlTemplate>

    </Window.Resources>

    <Grid>
        <ListView ItemsSource="{Binding EjectViewModels}" Margin="0" IsEnabled="True">
            <ListBox.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <Border BorderThickness="1"
                            BorderBrush="Gray"
                            Background="Black">
                        <ItemsPresenter Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </ListBox.Template>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <WrapPanel Orientation="Horizontal">
                        <Button x:Name="MohyoButton"
                                Command="{Binding EjectCommand}" 
                                CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                Cursor="Hand" 
                                Content="Eject"
                                Foreground="White"
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Bottom" 
                                Width="80"
                                Height="80" 
                                Template="{DynamicResource MohyoButtonTemplate}"
                                Background="#FF0068FF">
                        </Button>
                    </WrapPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListView>
    </Grid>
</Window>
